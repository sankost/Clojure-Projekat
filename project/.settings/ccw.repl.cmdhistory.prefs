cmdhistory=["(use 'ring.adapter.jetty)" "(use 'project.core)" "(run-jetty handler {\:port 8383})" "(run-jetty \#'handler {\:port 8383 \:join? false})" "(use \:reload 'project.core)" "\\r\\n\=> (run-jetty \#'handler {\:port 8383 \:join? false})" "(run-jetty \#'handler {\:port 8383 \:join? false})" "(use 'ring.adapter.jetty)" "(use 'project.core)" "(run-jetty handler {\:port 8383})" "(run-jetty \#'handler {\:port 8383 \:join? false})" "(use \:reload 'project.core)" "(use 'ring.adapter.jetty)" "(use 'project.core)" "(run-jetty \#'handler {\:port 8383 \:join? false})" "(use \:reload 'project.core)" "(use 'ring-tutorial.core)\\r\\n(boot)" "(use 'project.core)\\r\\n(boot)" "(use 'project.core)" "(boot)" "(use 'project.core)" "(use 'project.core)\\n(boot)" "(use 'project.core)" "(use 'project.core)\\r\\n(boot)" "(use 'project.core)" "(use 'project.core)\\r\\n(boot)" "(use 'project.core)" "(use 'project.core)\\n(boot)" "(use 'project.core)" "use 'project.core" "boot" "use 'project.core" "(boot)" "(use 'ring.adapter.jetty)" "(use 'project.core)" "(def server (jetty/run-jetty \#'project {\:port 8080 \:join? false}))" "(def server (jetty/run-jetty \#'app {\:port 8080 \:join? false}))" "(def server (jetty/run-jetty \#'project.core {\:port 8080 \:join? false}))" "\#'project.core/project" "(def server(jetty/run-jetty \#'project {\:port 8080 \:join? false}))" "(def server (jetty \#'project {\:port 8080 \:join? false}))" "(def server(jetty/run-jetty \#'project {\:port 8080 \:join? false}))" "(def server(jetty/run-jetty \#project {\:port 8080 \:join? false}))" "(def server (jetty/run-jetty \#'project.core {\:port 8080 \:join? false}))" "(def server (jetty/run-jetty \#'project {\:port 8080 \:join? false}))" "(def server (jetty/run-jetty \#'core {\:port 8080 \:join? false}))" "(def server (jetty/run-jetty \#'project {\:port 8080 \:join? false}))" "(def server (jetty/run-jetty \#'project {\:port 8081 \:join? false}))" "(def server (jetty/run-jetty \#'project{\:port 8080 \:join? false}))" "(app {\:uri \\"/hello\\"})" "(project {\:uri \\"/hello\\"})" "counter" "(def great-books [\\"East of Eden\\" \\"The Glass Bead Game\\"])" "(ns-interns *ns*)" "(get (ns-interns *ns*) 'great-books)" "(deref \#'user/great-books)" "great-books" "(def great-books [\\"The Power of Bees\\" \\"Journey to Upstairs\\"])\\r\\ngreat-books" "(in-ns 'cheese.analysis)" "(in-ns 'cheese.taxonomy)" "(def cheddars [\\"mild\\" \\"medium\\" \\"strong\\" \\"sharp\\" \\"extra sharp\\"])" "(in-ns 'cheese.analysis)" "cheddars" "cheese.taxonomy/cheddars" "(in-ns 'cheese.taxonomy)" "(def cheddars [\\"mild\\" \\"medium\\" \\"strong\\" \\"sharp\\" \\"extra sharp\\"])" "(def bries [\\"Wisconsin\\" \\"Somerset\\" \\"Brie de Meaux\\" \\"Brie de Mel\\"])" "(in-ns 'cheese.analysis)" "(clojure.core/refer 'cheese.taxonomy)" "bries" "cheddars" "(clojure.core/refer 'cheese.taxonomy \:only ['bries])" "bries" "(clojure.core/refer 'cheese.taxonomy \:rename {'bries 'yummy-bries})" "bries" "(clojure.core/alias 'taxonomy 'cheese.taxonomy)" "taxonomy/bries" "(ns project.core)" "(require 'project.visualization.svg)" "(require 'project.virtualization.svg)" "(refer 'project.virtualization.svg)" "(ns project.core)" "(require 'project.visualization.svg)" "(refer 'project.visualization.svg)" "(def heists [{\:location \\"Cologne, Germany\\"\\r\\n\:cheese-name \\"Archbishop Hildebold's Cheese Pretzel\\"\\r\\n\:lat 50.95\\r\\n\:lng 6.97}\\r\\n{\:location \\"Zurich, Switzerland\\"\\r\\n\:cheese-name \\"The Standard Emmental\\"\\r\\n\:lat 47.37\\r\\n\:lng 8.55}\\r\\n{\:location \\"Marseille, France\\"\\r\\n\:cheese-name \\"Le Fromage de Cosquer\\"\\r\\n\:lat 43.30\\r\\n\:lng 5.37}\\r\\n{\:location \\"Zurich, Switzerland\\"\\r\\n\:cheese-name \\"The Lesser Emmental\\"\\r\\n\:lat 47.37\\r\\n\:lng 8.55}\\r\\n{\:location \\"Vatican City\\"\\r\\n\:cheese-name \\"The Cheese of Turin\\"\\r\\n\:lat 41.90\\r\\n\:lng 12.45}])\\r\\n(defn -main\\r\\n[& args]\\r\\n(println (points heists)))" "-main" "(require '[project.visualization.svg \:as svg])" "(svg/points heists)" "(use '[project.visualization.svg \:as svg])" "(\= svg/points points)" "(\= svg/latlng->point latlng->point)" "(def fred (atom {\:cuddle-hunger-level 0\\r\\n\:percent-deteriorated 0}))" "@fred" "(swap\! fred\\r\\n(fn [current-state]\\r\\n(merge-with + current-state {\:cuddle-hunger-level 1})))" "(defn increase-cuddle-hunger-level\\r\\n[zombie-state increase-by]\\r\\n(merge-with + zombie-state {\:cuddle-hunger-level increase-by}))" "(increase-cuddle-hunger-level @fred 10)" "(swap\! fred increase-cuddle-hunger-level 10)" "@fred" "(update-in {\:a {\:b 3}} [\:a \:b] inc)" "run script/run.clj" "script/run.clj" "\\n(use 'ring.adapter.jetty)" "(use 'ring.adapter.jetty)" "(require 'project.core)" "(run-jetty \#'project.core/app {\:port 8080})" "(use 'ring.adapter.jetty)" "(require 'project.core)" "(run-jetty \#'project.core/app {\:port 8080})" "(use 'ring.adapter.jetty)" "(require 'project.core)" "(run-jetty \#'project.core/app {\:port 8080})" "(use 'ring.adapter.jetty)" "(require 'project.core)" "(run-jetty \#'project.core/app {\:port 8080})" "(use 'ring.adapter.jetty)" "(require 'project.core)" "(run-jetty \#'project.core/app {\:port 8080})" "(use 'ring.adapter.jetty)" "(require 'project.core)" "(run-jetty \#'project.core/app {\:port 8080})" "(run-jetty \#'adder.core/handler {\:port 8080})" "(use 'ring.adapter.jetty)" "(require 'project.core)" "(run-jetty \#'project.core/app {\:port 8080})" "(use 'ring.adapter.jetty)" "(require 'project.core)" "(run-jetty \#'project.core/app {\:port 8080})" "(use 'ring.adapter.jetty)" "(require 'project.core)" "(run-jetty \#'project.core/app {\:port 8080})" "(use 'ring.adapter.jetty)" "(require 'project.core)" "(run-jetty \#'project.core/app {\:port 8080})" "(use 'ring.adapter.jetty)" "(require 'project.core)" "(run-jetty \#'project.core/app {\:port 8080})" "(use 'ring.adapter.jetty)" "(require 'project.core)" "(run-jetty \#'project.core/app {\:port 8080})" "lein ring server"]
eclipse.preferences.version=1
